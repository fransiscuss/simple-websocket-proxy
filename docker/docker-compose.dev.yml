version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: websocket_proxy
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d websocket_proxy"]
      interval: 5s
      timeout: 5s
      retries: 5

  ws-proxy:
    build:
      context: ../packages/ws-proxy
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
      - DATABASE_URL=postgresql://dev:dev123@postgres:5432/websocket_proxy
      - LOG_LEVEL=debug
      - DEFAULT_ADMIN_EMAIL=admin@example.com
      - DEFAULT_ADMIN_PASSWORD=admin123
      - SAMPLING_DEFAULT=false
      - LIMITS_DEFAULT={"maxConnections":100,"maxMessageSize":1048576,"timeoutMs":30000}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3

  ops-ui:
    build:
      context: ../packages/ops-ui
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - API_BASE_URL=http://ws-proxy:8080/api
      - NEXT_PUBLIC_WS_OPS_URL=ws://localhost:8080/ops
    depends_on:
      ws-proxy:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data: